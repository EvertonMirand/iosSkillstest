//
//  UsersPresenter.swift
//  iosSkillstest
//
//  Created by Everton Miranda Vitório on 22/09/18.
//  Copyright (c) 2018 Everton Miranda Vitório. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

protocol UsersPresenterInput {
    func presentLoggedUser(response: UsersScene.GetLoggedUser.Response)
    func presentUsers(response: UsersScene.FetchUsers.Response)
}

protocol UsersPresenterOutput: class {
    func displayLoggedUser(viewModel: UsersScene.GetLoggedUser.ViewModel)
    func displayUsers(viewModel: UsersScene.FetchUsers.ViewModel)
    func displayErrorToFetchUsers(error: String)
}

class UsersPresenter: UsersPresenterInput {
    
    weak var output: UsersPresenterOutput?
    
    // MARK: Presentation logic
    
    func presentLoggedUser(response: UsersScene.GetLoggedUser.Response) {
        let user = response.user
        let loggedUser = UsersScene.GetLoggedUser.ViewModel.User(email: user.email, name: user.name)
        let viewModel = UsersScene.GetLoggedUser.ViewModel(user: loggedUser)
        output?.displayLoggedUser(viewModel: viewModel)
    }
    
    func presentUsers(response: UsersScene.FetchUsers.Response) {
        switch response.state {

        case .sucess(let users):
            let usersRow = users.map { (user) -> UsersScene.FetchUsers.ViewModel.User in
                return UsersScene.FetchUsers.ViewModel.User(email: user.email, name: user.name)
            }
            let viewModel = UsersScene.FetchUsers.ViewModel(users: usersRow)
            output?.displayUsers(viewModel: viewModel)
        case .failure(let errorMessage):
            output?.displayErrorToFetchUsers(error: errorMessage)
        }
    }
    
}
