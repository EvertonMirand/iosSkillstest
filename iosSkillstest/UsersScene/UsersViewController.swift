//
//  UsersViewController.swift
//  iosSkillstest
//
//  Created by Everton Miranda Vitório on 22/09/18.
//  Copyright (c) 2018 Everton Miranda Vitório. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit
import SVProgressHUD

protocol UsersViewControllerInput {
    func displayLoggedUser(viewModel: UsersScene.GetLoggedUser.ViewModel)
    func displayUsers(viewModel: UsersScene.FetchUsers.ViewModel)
    func displayErrorToFetchUsers(error: String)
}

protocol UsersViewControllerOutput {
    func getLoggedUser(request: UsersScene.GetLoggedUser.Request)
    func fetchUsers(request: UsersScene.FetchUsers.Request)
}

class UsersViewController: UIViewController, UsersViewControllerInput {
    
    // MARK: Propeties
    
    var output: UsersViewControllerOutput?
    var router: UsersRouter?
    var loggedUser: UsersScene.GetLoggedUser.ViewModel.User?
    var users: [UsersScene.FetchUsers.ViewModel.User] = []
    var filteredUsers: [UsersScene.FetchUsers.ViewModel.User] = []
    var isSFilteringUsers = false
    
    // MARK: Outlets
    
    @IBOutlet weak var searchBar: UISearchBar!
    @IBOutlet weak var tablewView: UITableView!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        UsersConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.hidesBackButton = true
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        getLoggedUser()
        fetchUsers()
    }
    
    // MARK: Requests
    
    func getLoggedUser() {
        let request = UsersScene.GetLoggedUser.Request()
        output?.getLoggedUser(request: request)
    }
    
    func fetchUsers() {
        SVProgressHUD.show()
        let request = UsersScene.FetchUsers.Request()
        output?.fetchUsers(request: request)
    }
    
    
    // MARK: Display logic
    
    func displayLoggedUser(viewModel: UsersScene.GetLoggedUser.ViewModel) {
        loggedUser = viewModel.user
        let indexSet = IndexSet(integer: 0)
        tablewView.reloadSections(indexSet, with: .none)
    }
    
    func displayUsers(viewModel: UsersScene.FetchUsers.ViewModel) {
        SVProgressHUD.dismiss()
        users = viewModel.users
        tablewView.reloadData()
    }
    
    func displayErrorToFetchUsers(error: String) {
        SVProgressHUD.dismiss()
        displayErrorAlert(with: error)
    }
 
}


// MARK: IBActions

extension UsersViewController {

    @IBAction func logout(_ sender: Any) {
        dismiss(animated: true)
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension UsersViewController: UsersPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
