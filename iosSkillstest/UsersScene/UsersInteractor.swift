//
//  UsersInteractor.swift
//  iosSkillstest
//
//  Created by Everton Miranda Vitório on 22/09/18.
//  Copyright (c) 2018 Everton Miranda Vitório. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import RealmSwift

protocol UsersInteractorInput {
    func getLoggedUser(request: UsersScene.GetLoggedUser.Request)
    func fetchUsers(request: UsersScene.FetchUsers.Request)
}

protocol UsersInteractorOutput {
    func presentLoggedUser(response: UsersScene.GetLoggedUser.Response)
    func presentUsers(response: UsersScene.FetchUsers.Response)
}

protocol UsersDataSource {
    
}

protocol UsersDataDestination {
    var user: User! { get set }
}

class UsersInteractor: UsersInteractorInput, UsersDataSource, UsersDataDestination {
    
    
    
    var output: UsersInteractorOutput?
    var user: User!
    
    // MARK: Business logic
    
    func getLoggedUser(request: UsersScene.GetLoggedUser.Request) {
        let response = UsersScene.GetLoggedUser.Response(user: user)
        output?.presentLoggedUser(response: response)
    }
    
    func fetchUsers(request: UsersScene.FetchUsers.Request) {
        var state = UsersScene.FetchUsers.Response.State.failure(errorMessage: "Não foi possivel carregar os outros usuarios")
        do {
            let realm = try Realm()
            let users = realm.objects(User.self).filter { (user) -> Bool in
                return user.email != self.user.email
            } as [User]
            state = .sucess(users)
        } catch {
            
        }
        let response = UsersScene.FetchUsers.Response(state: state)
        output?.presentUsers(response: response)
    }
    

}
